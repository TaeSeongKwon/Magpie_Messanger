-- MySQL Script generated by MySQL Workbench
-- Wed Feb  8 20:35:47 2017
-- Model: MAGPIE_DB    Version: 1.0

-- Magpie Messanger의 데이터를 관리하는
-- 데이터베이스의 논리설계모델링입니다.

-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema MAGPIE_DB
-- -----------------------------------------------------
-- Magpie Messanger의 데이터베이스
DROP SCHEMA IF EXISTS `MAGPIE_DB` ;

-- -----------------------------------------------------
-- Schema MAGPIE_DB
--
-- Magpie Messanger의 데이터베이스
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MAGPIE_DB` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `MAGPIE_DB` ;

-- -----------------------------------------------------
-- Table `MAGPIE_DB`.`MEMBER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MAGPIE_DB`.`MEMBER` ;

CREATE TABLE IF NOT EXISTS `MAGPIE_DB`.`MEMBER` (
  `mem_num` INT NOT NULL AUTO_INCREMENT COMMENT '회원의 고유번호',
  `mem_name` VARCHAR(45) CHARACTER SET 'utf8' NOT NULL COMMENT '회원의 이름',
  `mem_email` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT '회원의 계정과 이메일을 의미',
  `mem_password` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT '회원 계정의 비밀번호',
  `mem_picture` LONGTEXT CHARACTER SET 'utf8' NULL COMMENT '회원 계정의 사진을 의미\n',
  PRIMARY KEY (`mem_num`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `MAGPIE_DB`.`FRIEND`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MAGPIE_DB`.`FRIEND` ;

CREATE TABLE IF NOT EXISTS `MAGPIE_DB`.`FRIEND` (
  `friend_num` INT NOT NULL AUTO_INCREMENT COMMENT '회원 친구의 고유번호',
  `from_num` INT NOT NULL COMMENT '회원을 의미하는 고유번호',
  `to_num` INT NOT NULL COMMENT '회원의 친구를 의미하는 고유번호',
  `is_interception` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '친구를 차단했는지에 대한 여부 ',
  PRIMARY KEY (`friend_num`)  COMMENT '',
  INDEX `from_num_idx` (`from_num` ASC)  COMMENT '',
  INDEX `to_number_idx` (`to_num` ASC)  COMMENT '',
  CONSTRAINT `from_number`
    FOREIGN KEY (`from_num`)
    REFERENCES `MAGPIE_DB`.`MEMBER` (`mem_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `to_number`
    FOREIGN KEY (`to_num`)
    REFERENCES `MAGPIE_DB`.`MEMBER` (`mem_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '회원의 친구관계를 나타냄';


-- -----------------------------------------------------
-- Table `MAGPIE_DB`.`CHATTING_ROOM`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MAGPIE_DB`.`CHATTING_ROOM` ;

CREATE TABLE IF NOT EXISTS `MAGPIE_DB`.`CHATTING_ROOM` (
  `room_num` INT NOT NULL AUTO_INCREMENT COMMENT '채팅 방의 고유번호',
  `room_name` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT '채팅방의 이름',
  PRIMARY KEY (`room_num`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '채팅 방을 의미';


-- -----------------------------------------------------
-- Table `MAGPIE_DB`.`ROOM_MEMBER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MAGPIE_DB`.`ROOM_MEMBER` ;

CREATE TABLE IF NOT EXISTS `MAGPIE_DB`.`ROOM_MEMBER` (
  `rm_num` INT NOT NULL AUTO_INCREMENT COMMENT '채팅방 구성원의  고유번호',
  `rm_name` VARCHAR(255) CHARACTER SET 'utf8' NOT NULL COMMENT '구성원의 채팅방의 이름을 의미',
  `room_num` INT NOT NULL COMMENT '참여하고 있는 채팅방의 번호',
  `mem_num` INT NOT NULL COMMENT '참여하고 있는 회원의 계정',
  PRIMARY KEY (`rm_num`)  COMMENT '',
  INDEX `room_num_idx` (`room_num` ASC)  COMMENT '',
  INDEX `mem_num_idx` (`mem_num` ASC)  COMMENT '',
  CONSTRAINT `room_number`
    FOREIGN KEY (`room_num`)
    REFERENCES `MAGPIE_DB`.`CHATTING_ROOM` (`room_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `member_number`
    FOREIGN KEY (`mem_num`)
    REFERENCES `MAGPIE_DB`.`MEMBER` (`mem_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '채팅방의 구성원을 의미';


-- -----------------------------------------------------
-- Table `MAGPIE_DB`.`CHATTING_MESSAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MAGPIE_DB`.`CHATTING_MESSAGE` ;

CREATE TABLE IF NOT EXISTS `MAGPIE_DB`.`CHATTING_MESSAGE` (
  `cm_num` INT NOT NULL AUTO_INCREMENT COMMENT '메시지 번호',
  `mem_num` INT NOT NULL COMMENT '메시지를 전송한 회원의 번호',
  `room_num` INT NOT NULL COMMENT '메시지를 전송하고자 하는 채팅방의 번호',
  `cm_date` BIGINT(11) NOT NULL COMMENT '메시지를 전송한 일자',
  PRIMARY KEY (`cm_num`)  COMMENT '',
  INDEX `room_number_idx` (`room_num` ASC)  COMMENT '',
  INDEX `mem_number_idx` (`mem_num` ASC)  COMMENT '',
  CONSTRAINT `send_member`
    FOREIGN KEY (`mem_num`)
    REFERENCES `MAGPIE_DB`.`MEMBER` (`mem_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `destination_room`
    FOREIGN KEY (`room_num`)
    REFERENCES `MAGPIE_DB`.`CHATTING_ROOM` (`room_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MAGPIE_DB`.`ACCESS_LOG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MAGPIE_DB`.`ACCESS_LOG` ;

CREATE TABLE IF NOT EXISTS `MAGPIE_DB`.`ACCESS_LOG` (
  `log_num` INT NOT NULL AUTO_INCREMENT COMMENT '기록번호',
  `log_type` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '기록의 종류 ( 입장 or 퇴장)',
  `mem_num` INT NOT NULL COMMENT '채팅방의 출입을 일으킨 회원의 번호',
  `room_num` INT NOT NULL COMMENT '채팅방의 번호',
  `log_date` BIGINT(11) NOT NULL COMMENT '참여 또는 퇴장의 일자',
  PRIMARY KEY (`log_num`)  COMMENT '',
  INDEX `mem_number_idx` (`mem_num` ASC)  COMMENT '',
  INDEX `room_number_idx` (`room_num` ASC)  COMMENT '',
  CONSTRAINT `access_member`
    FOREIGN KEY (`mem_num`)
    REFERENCES `MAGPIE_DB`.`MEMBER` (`mem_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `access_room`
    FOREIGN KEY (`room_num`)
    REFERENCES `MAGPIE_DB`.`CHATTING_ROOM` (`room_num`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
